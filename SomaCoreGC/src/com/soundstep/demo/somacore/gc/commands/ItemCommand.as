package com.soundstep.demo.somacore.gc.commands {	import com.soundstep.demo.somacore.gc.events.ItemEvent;	import com.soundstep.demo.somacore.gc.wires.ItemWire;	import com.soma.core.controller.Command;	import com.soma.core.interfaces.ICommand;	import flash.events.Event;	/**	 * <b>Author:</b> Romuald Quantin - <a href="http://www.soundstep.com/" target="_blank">www.soundstep.com</a><br />	 * <b>Company:</b> Less Rain - <a href="http://www.lessrain.com/" target="_blank">www.lessrain.com</a><br />	 * <b>Class version:</b> 1.0<br />	 * <b>Actionscript version:</b> 3.0<br />	 * <b>Copyright:</b> 	 * <br />	 * <b>Date:</b> Jan 11, 2010<br />	 * <b>Usage:</b>	 * @example	 * <listing version="3.0"></listing>	 */		public class ItemCommand extends Command implements ICommand {		//------------------------------------		// private, protected properties		//------------------------------------						//------------------------------------		// public properties		//------------------------------------								//------------------------------------		// constructor		//------------------------------------				public function ItemCommand() {					}				//		// PRIVATE, PROTECTED		//________________________________________________________________________________________________								// PUBLIC		//________________________________________________________________________________________________				public function execute(event:Event):void {
			var id:int = ItemEvent(event).id;			switch (event.type) {
				case ItemEvent.CREATE:					addWire(ItemWire.NAME + id, new ItemWire(id));					break;				case ItemEvent.DESTROY:					removeWire(ItemWire.NAME + id);					break;			}
		}	}}